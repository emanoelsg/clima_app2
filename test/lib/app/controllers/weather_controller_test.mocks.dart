// Mocks generated by Mockito 5.4.6 from annotations
// in clima_app2/test/lib/app/controllers/weather_controller_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:clima_app2/app/models/hourly_model/hourly_model.dart' as _i6;
import 'package:clima_app2/app/models/weather_model/weather_model.dart' as _i5;
import 'package:clima_app2/app/models/weekly_model/weekly_forecast_model.dart'
    as _i2;
import 'package:clima_app2/app/service/weather_service.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeWeeklyForecast_0 extends _i1.SmartFake
    implements _i2.WeeklyForecast {
  _FakeWeeklyForecast_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [WeatherService].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeatherService extends _i1.Mock implements _i3.WeatherService {
  MockWeatherService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i5.WeatherModel?> fetchWeather({required String? city}) =>
      (super.noSuchMethod(
            Invocation.method(#fetchWeather, [], {#city: city}),
            returnValue: _i4.Future<_i5.WeatherModel?>.value(),
          )
          as _i4.Future<_i5.WeatherModel?>);

  @override
  _i4.Future<_i2.WeeklyForecast> getWeeklyForecast({required String? city}) =>
      (super.noSuchMethod(
            Invocation.method(#getWeeklyForecast, [], {#city: city}),
            returnValue: _i4.Future<_i2.WeeklyForecast>.value(
              _FakeWeeklyForecast_0(
                this,
                Invocation.method(#getWeeklyForecast, [], {#city: city}),
              ),
            ),
          )
          as _i4.Future<_i2.WeeklyForecast>);

  @override
  _i4.Future<List<_i6.HourlyForecast>> getHourlyForecast({
    required String? city,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getHourlyForecast, [], {#city: city}),
            returnValue: _i4.Future<List<_i6.HourlyForecast>>.value(
              <_i6.HourlyForecast>[],
            ),
          )
          as _i4.Future<List<_i6.HourlyForecast>>);
}
